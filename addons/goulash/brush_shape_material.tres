[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://8hs3p3kogtk3"]

[sub_resource type="Shader" id="Shader_cmcne"]
code = "shader_type canvas_item;
render_mode unshaded;

uniform sampler2D screen_texture : hint_screen_texture, repeat_disable, filter_nearest;
varying vec4 modulate;

void vertex() {
	modulate = COLOR;
}

void fragment() {
	COLOR.rgb = modulate.rgb;
	float a = 0.0;
	
	// some kind of anti-alias, but expensive ðŸ’¸
	a += texture(screen_texture, SCREEN_UV).r * 2.0;
	for (float i = 0.0; i < 1.0; i += 1.0 / 5.0) {
		a += texture(screen_texture, SCREEN_UV + vec2(sin(i * TAU), cos(i * TAU)) * 2.0 * SCREEN_PIXEL_SIZE).r;
		a += texture(screen_texture, SCREEN_UV + vec2(sin(i * TAU), cos(i * TAU)) * 1.0 * SCREEN_PIXEL_SIZE).r;
	}
	a = smoothstep(0.2, 0.6, a / 12.0);
	
	COLOR.a = a * modulate.a;
	
	//COLOR.a = texture(screen_texture, SCREEN_UV).r * modulate.a;
	
	//a = textureLod(screen_texture, SCREEN_UV, 2.0).r;
	//COLOR.a = smoothstep(0.45, 0.55, a);
}"
metadata/_edit_res_path = "res://addons/glash/brush_shape_material.tres::Shader_cmcne"

[resource]
shader = SubResource("Shader_cmcne")
